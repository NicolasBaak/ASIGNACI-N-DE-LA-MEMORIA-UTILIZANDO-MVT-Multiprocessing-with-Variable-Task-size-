package vista;

import modelo.listaDoble;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import sun.awt.windows.ThemeReader;

public class hilos extends javax.swing.JPanel {

    String nombre;
    listaDoble tal =new listaDoble();
    listaDoble tp = new listaDoble();
    
    public hilos(listaDoble tal, listaDoble tp) {
        initComponents();
        this.setOpaque(true);
        this.setSize(new Dimension(20,1000));
        this.setPreferredSize(new Dimension(20, 1000));
        this.tal = tal;
        this.tp = tp;
    }
    
    public void paint(Graphics g){
        super.paint(g);
        int  posiciones[] = new int[10];
         posiciones[0] = 15;
        //Pintando los rectangulos azules de los procesos tp
        int disNodo = 15, aumentoNodo = 75;  
        int disNombre = 20,aumentoNombre= 73; 
        int disNombreProceso = 50, aumentoNombreProceso= 80;
            g.setColor(Color.BLUE);
            g.fillRect(50, disNodo , 160, 70);
            this.setSize(disNodo+200, 21); 
            g.setColor(Color.black); 
            g.drawString("0", 30, disNombre);
            g.setColor(Color.white);   
            g.drawString("SO", 120, disNombreProceso);
            disNodo +=  aumentoNodo;
            disNombre += aumentoNombre;
            g.setColor(Color.GRAY);
            g.fillRect(50, disNodo , 160, 340);
            this.setSize(disNodo+200, 21); 
            g.setColor(Color.black);    g.drawString("10", 30, disNombre); 
            g.drawString("64", 30, 430);            
           
            disNodo = 90;       
            disNombre = 93;
            disNombreProceso =130;
        for (int i = 0; i < tp.size(); i++) {  
           char aux = 't';
           posiciones[i+1] = disNodo;
            int j = 1;
            while(j < tp.size()){
            if(tp.get(j).dato.getEstado() == 'A' & tp.get(j).dato.getTama()>tp.get(i).dato.getTama() && posiciones[j+1] == 240)
            {
            g.setColor(Color.BLUE);
            g.fillRect(50, posiciones[j+2] , 160, 30);
            g.setColor(Color.white);   
            g.drawString("Aqui ando: "+String.valueOf(posiciones[j+1]+20), 120, posiciones[j+1]+20); 
           
            }
            j++;
            } 
            if(tp.get(i).dato.getEstado()== 'A')
                g.setColor(Color.BLUE);
  //          else if(tp.get(i+1).dato.getEstado() == 'D')
  //             g.setColor(Color.GRAY);
            else
               g.setColor(Color.RED);
            if(aux == 't' && disNodo < 355){
            g.fillRect(50, disNodo , 160, 70);
            
            this.setSize(disNodo+200, 21); 
            g.setColor(Color.black); 
            g.drawString(String.valueOf(tp.get(i).dato.getLocalidad()), 30, disNombre);
            
            g.setColor(Color.WHITE); 
            if(tp.get(i).dato.getEstado()== 'A')
            g.drawString("P"+String.valueOf(tp.get(i).dato.getProceso()), 120, disNombreProceso);
            
            aux = 't';
            }
           
            
            disNodo += aumentoNodo;
            disNombre += aumentoNombre;
            disNombreProceso += aumentoNombreProceso;
        }
        //Pintando los rectangulos grices y rojos de los espacios de tal 
        char finish='t';
        for (int i = 0; i < tp.size(); i++) {
           if(tp.get(i).dato.getEstado() == 'A')
               finish = 'f';
        }
        if(finish == 't'){
         disNodo = 15;           
         disNombre = 20;
         disNombreProceso = 50;
            g.setColor(Color.BLUE);
            g.fillRect(50, disNodo , 160, 70);
            this.setSize(disNodo+200, 21); 
            g.setColor(Color.black); 
            g.drawString("0", 30, disNombre);
            g.setColor(Color.white);   
            g.drawString("SO", 120, disNombreProceso);
            disNodo +=  aumentoNodo;
            disNombre += aumentoNombre;
            g.setColor(Color.GRAY);
            g.fillRect(50, disNodo , 160, 340);
            this.setSize(disNodo+200, 21); 
            g.setColor(Color.black);    g.drawString("10", 30, disNombre); 
            g.drawString("64", 30, 430); 
        }
         this.repaint();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setAutoscrolls(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
