/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import javax.swing.table.DefaultTableModel;
import modelo.listaDoble;
import controlador.mvt;
import java.awt.Color;
import javax.swing.SwingConstants;
import modelo.valores;

public class controlador extends javax.swing.JFrame {

    DefaultTableModel tal;
    DefaultTableModel tp;
    DefaultTableModel aux;
    listaDoble listaDoble = new listaDoble();
    listaDoble talListaDoble = new listaDoble();
    listaDoble tpListaDoble = new listaDoble();
    valores valores = new modelo.valores();
    char finalizado = 'f';
    /**
     * Creates new form vista_principal
     */
    public void tabla() {
        String cabecera[] = {"Numero", "Localidad", "Tamaño", "Estado"};
        tal = new DefaultTableModel(null, cabecera);
      
        
        jTableTal.setModel(tal);

        String cabecera2[] = {"Numero", "Localidad", "Tamaño", "Estado", "Duracion", "Proceso"};
        tp = new DefaultTableModel(null, cabecera2);
        jTableTp.setModel(tp);
    }

    public controlador() {
        initComponents();
       // this.getContentPane().setBackground(Color.orange);
        tabla();
        obtenerDatosTablaPrincipal();
        this.getContentPane().setBackground(Color.orange);
        this.setLocationRelativeTo(null);
        valores.numeroPasos = 1;
        valores.contadortp = 0;
        valores.contadortal = 0;
        valores.ant_contadortal = valores.contadortal;
        valores.i = 0;
        
       
        modelo.controlador so = new modelo.controlador(1, 10, 54, 'D');
        talListaDoble.insertarFinal(so);
        insertarDatoTablaTal(talListaDoble);
         
        jScrollGrafico.setViewportView(new dibujos(listaDoble.size(), listaDoble));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrincipal = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTal = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTp = new javax.swing.JTable();
        jButtonPaso = new javax.swing.JButton();
        jLabelMvt = new javax.swing.JLabel();
        jLabelTal = new javax.swing.JLabel();
        jLabelTp = new javax.swing.JLabel();
        jScrollGrafico = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulacion de asignación de memoria con MVT");
        setBackground(java.awt.Color.orange);

        jTablePrincipal.setBackground(new java.awt.Color(204, 255, 204));
        jTablePrincipal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTablePrincipal.setForeground(new java.awt.Color(0, 0, 0));
        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"A", "8", "1", "7"},
                {"B", "14", "2", "7"},
                {"C", "18", "3", "4"},
                {"D", "6", "4", "6"},
                {"E", "14", "5", "5"}
            },
            new String [] {
                "Proceso", "Tamaño", "Tiempo de llegada", "Duración (Tiempo en que finaliza)"
            }
        ));
        jTablePrincipal.setToolTipText("");
        jTablePrincipal.setAlignmentY(5.0F);
        jTablePrincipal.setEnabled(false);
        jTablePrincipal.setFocusable(false);
        jTablePrincipal.setSelectionForeground(new java.awt.Color(153, 255, 204));
        jTablePrincipal.getTableHeader().setResizingAllowed(false);
        jTablePrincipal.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTablePrincipal);

        jTableTal.setBackground(new java.awt.Color(204, 255, 204));
        jTableTal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTableTal.setForeground(new java.awt.Color(0, 0, 0));
        jTableTal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableTal.setToolTipText("");
        jTableTal.setEnabled(false);
        jTableTal.setFocusable(false);
        jTableTal.getTableHeader().setResizingAllowed(false);
        jTableTal.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableTal);

        jTableTp.setBackground(new java.awt.Color(204, 255, 204));
        jTableTp.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTableTp.setForeground(new java.awt.Color(0, 0, 0));
        jTableTp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableTp.setEnabled(false);
        jTableTp.setFocusable(false);
        jTableTp.getTableHeader().setResizingAllowed(false);
        jTableTp.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTableTp);

        jButtonPaso.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButtonPaso.setText("Empezar");
        jButtonPaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasoActionPerformed(evt);
            }
        });

        jLabelMvt.setFont(new java.awt.Font("Dialog", 1, 27)); // NOI18N
        jLabelMvt.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMvt.setText("SIMULACIÓN DE ASIGNACIÓN DE MEMORIA CON MVT");

        jLabelTal.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelTal.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTal.setText("Tabla Áreas Libres (TAL[ ] )");

        jLabelTp.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelTp.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTp.setText("Tabla Particiones (TP[ ] )");

        jScrollGrafico.setAutoscrolls(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(117, 117, 117)
                                        .addComponent(jButtonPaso, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(76, 76, 76)
                                        .addComponent(jLabelTal))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(jLabelTp)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMvt, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabelMvt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabelTal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelTp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPaso, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        mvt n = new mvt(listaDoble);
    private void jButtonPasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasoActionPerformed

                  
        if (finalizado  == 'f') {
         
             
            jButtonPaso.setText("Paso " + valores.numeroPasos);
            n.mvt(valores, talListaDoble, tpListaDoble);    
            
            if (valores.i >= 5) {
                valores.i = 0;
            }
            finalizado = n.finish(finalizado, tpListaDoble, talListaDoble);
           
            eliminAreasLibresIguales( talListaDoble);   
            insertarDatoTablaTp(tpListaDoble);
             
            eliminAreasLibres(talListaDoble);      
            insertarDatoTablaTal(talListaDoble);  
            actualizarGrafico(talListaDoble, tpListaDoble);
         
             
         } else if (finalizado  == 't') {      
             avanzaTiempo(tpListaDoble,talListaDoble, valores);
             eliminAreasLibresIguales( talListaDoble);   
             insertarDatoTablaTal(talListaDoble);
             
            jButtonPaso.setText("Finalizada");
            finalizado  = 'x';
            valores.numeroPasos++;
        } else {
             avanzaTiempo(tpListaDoble,talListaDoble, valores);
             eliminAreasLibresIguales( talListaDoble);   
             insertarDatoTablaTal(talListaDoble);
             
            System.exit(0);
        }        
    }//GEN-LAST:event_jButtonPasoActionPerformed
public void avanzaTiempo(listaDoble tp, listaDoble tal, modelo.valores v) {

        for (int i = 0; i < tp.size(); i++) {
            if (tp.get(i).dato.getDuracion() > 0) {
                tp.get(i).dato.setDuracion(tp.get(i).dato.getDuracion() - 1);
            }

            if (tp.get(i).dato.getDuracion() == 0) {
                if (tp.get(i).dato.getEstado() == 'A') {
                    v.contadortal++;
                    tp.get(i).dato.setEstado('D');
                    modelo.controlador a = new modelo.controlador(v.contadortal+1, tp.get(i).dato.getLocalidad(), tp.get(i).dato.getTama(), 'D');
                    tal.insertarFinal(a);
                    
                }

            }

        }

    }
    public void eliminAreasLibresIguales(listaDoble tal){
    
        for(int i = 0; i < tal.size(); i++){
              
            if(tal.size() > 0){
              for(int j = 1; j < tal.size(); j++){

                  int numero;
                  int localidad;
                  int tama;
                  char estado = 'D';
                 
                  if(tal.get(i).dato.getLocalidad() == tal.get(j).dato.getLocalidad() && tal.get(i).dato.getNumero() != tal.get(j).dato.getNumero()){
                    localidad = tal.get(i).dato.getLocalidad();
                    if(tal.get(i).dato.getTama() > tal.get(i).dato.getTama())
                      tama = tal.get(i).dato.getTama();
                    else
                      tama = tal.get(j).dato.getTama();
                    
                    if(tal.get(i).dato.getNumero() > tal.get(i).dato.getNumero())
                        numero = tal.get(i).dato.getNumero();
                    else
                        numero = tal.get(i).dato.getNumero();
                    
                    modelo.controlador a = new modelo.controlador(numero, localidad, tama, estado);
                   
                   tal.insertarFinal(a); 
                   tal.eliminarEntreNodos(j);
                   tal.eliminarEntreNodos(i); 
                  --valores.contadortal;
                  }
              }  
            } 
        }    
    }
    
    public void eliminAreasLibres(listaDoble tal){
    
        for(int i = 0; i < tal.size(); i++){
                
            if(tal.size() > 0){
              for(int j = 1; j < tal.size(); j++){
                                    
                  int numero;
                  int localidad;
                  int tama;
                  char estado = 'D';
                 
                  
                  if(tal.get(i).dato.getLocalidad() == (tal.get(j).dato.getLocalidad()+tal.get(j).dato.getTama()) || tal.get(j).dato.getLocalidad() == (tal.get(i).dato.getLocalidad()+tal.get(i).dato.getTama())){                 
                    if(tal.get(i).dato.getLocalidad() > tal.get(j).dato.getLocalidad())
                        localidad = tal.get(j).dato.getLocalidad();
                    else
                        localidad = tal.get(i).dato.getLocalidad();
                  
                  tama = tal.get(i).dato.getTama() + tal.get(j).dato.getTama();
                
                    if(tal.get(i).dato.getNumero() > tal.get(j).dato.getNumero())
                        numero = tal.get(j).dato.getNumero();
                    else
                        numero = tal.get(i).dato.getNumero();
                   
                   modelo.controlador a = new modelo.controlador(numero, localidad, tama, estado);
                   
                   tal.insertarFinal(a); 
                   tal.eliminarEntreNodos(j);
                   tal.eliminarEntreNodos(i); 
                   --valores.contadortal;
                  }
              }  
            } 
        }    
    }
//Obtengo los valores de la tabla principal
    public void obtenerDatosTablaPrincipal() {
        //System.out.println("\t Nombre \t tama \t tiempoLlegada \t Duracion \n\n");       
        int totalDatos = jTablePrincipal.getRowCount();
        for (int i = 0; i < totalDatos; i++) {
            String nombre = jTablePrincipal.getValueAt(i, 0).toString();
            int tama = Integer.parseInt(jTablePrincipal.getValueAt(i, 1).toString());
            int tiempoLlegada = Integer.parseInt(jTablePrincipal.getValueAt(i, 2).toString());
            int duracion = Integer.parseInt(jTablePrincipal.getValueAt(i, 3).toString());
            // System.out.println("\t"+ nombre +"\t"+ tama +"\t" + tiempoLlegada +"\t" + duracion +"\n\n");
            modelo.controlador p = new modelo.controlador(nombre, tama, tiempoLlegada, duracion);
            // System.out.println(p.getNombreProceso() +" "+p.getTama()+" "+p.getTiempoLlegada()+ " "+p.getDuracion());
            listaDoble.insertarFinal(p);
            //  listaDoble.imprimirTablaPrincipal();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(controlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(controlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(controlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(controlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new controlador().setVisible(true);
            }
        });
    }

    public void insertarDatoTablaTal(listaDoble tal) {
 
        vaciarTabla(this.tal); 
        for(int i = 0; i < tal.size(); i++){
        String datosTal[] = new String[4];
        datosTal[0] = String.valueOf(tal.get(i).dato.getNumero());
        //System.out.println(tal.get(i).dato.getNumero());
        datosTal[1] = String.valueOf(tal.get(i).dato.getLocalidad());
        //System.out.println(tal.get(i).dato.getLocalidad());
        datosTal[2] = String.valueOf(tal.get(i).dato.getTama());
        //System.out.println(tal.get(i).dato.getTama());
        datosTal[3] = String.valueOf(tal.get(i).dato.getEstado());
        //System.out.println(tal.get(i).dato.getEstado());
        this.tal.addRow(datosTal);
        }
     }

    public void insertarDatoTablaTp(listaDoble tp) {
        
        vaciarTabla(this.tp); 
        for(int i = 0; i < tp.size(); i++){
        String datosTal[] = new String[6];

        datosTal[0] = String.valueOf(tp.get(i).dato.getNumero());
        //System.out.println(tp.get(i).dato.getNumero());
        datosTal[1] = String.valueOf(tp.get(i).dato.getLocalidad());
        //System.out.println(tp.get(i).dato.getLocalidad());
        datosTal[2] = String.valueOf(tp.get(i).dato.getTama());
        //System.out.println(tp.get(i).dato.getTama());
        datosTal[3] = String.valueOf(tp.get(i).dato.getEstado());
        //System.out.println(tp.get(i).dato.getEstado());
        datosTal[4] = String.valueOf(tp.get(i).dato.getDuracion());
        //System.out.println(tp.get(i).dato.getProgreso());
        datosTal[5] = "P"+String.valueOf(tp.get(i).dato.getProceso());
        this.tp.addRow(datosTal);
        }
        
    }
    
    public void vaciarTabla(DefaultTableModel tabla){
        int numDatos = tabla.getRowCount();
        for(int i = 0; i< numDatos; i++){
        tabla.removeRow(0);
        }
    }
    
    public void actualizarGrafico(listaDoble tal, listaDoble tp)
    {
           
        jScrollGrafico.setViewportView(new hilos(tal, tp));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPaso;
    private javax.swing.JLabel jLabelMvt;
    private javax.swing.JLabel jLabelTal;
    private javax.swing.JLabel jLabelTp;
    private javax.swing.JScrollPane jScrollGrafico;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablePrincipal;
    private javax.swing.JTable jTableTal;
    private javax.swing.JTable jTableTp;
    // End of variables declaration//GEN-END:variables
}
